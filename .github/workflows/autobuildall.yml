name: AutoBuildAll

on:
  workflow_dispatch:
  schedule:
    - cron: '42 7 * * *' # At 0742 each day

jobs:
  check_for_new_stable:
    runs-on: ubuntu-latest
    outputs:
      dartversion: ${{ steps.dartversion.outputs.dartversion }}
    steps:
      - name: checkout repo content
        uses: actions/checkout@v2.3.4 # checkout the repository content to github runner.

      - id: dartversion
        name: Check stable version
        run: |
          DDURL="https://raw.githubusercontent.com/dart-lang/dart-docker/main/versions.json"
          curl -s $DDURL | jq -r .stable.version > DART_STABLE_VERSION
          if [ -z "$(git status --porcelain)" ]; then 
            echo 'No new stable release of Dart'
            echo "::set-output name=dartversion::NOTNEW"
            exit 0
          else
            DART_VERSION=$(cat DART_STABLE_VERSION)
            echo "::set-output name=dartversion::$DART_VERSION"
            git config --global user.name 'Release Check Action'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git commit -am "New Dart stable version $DART_VERSION"
            git push
          fi          
  
  build_multi_arch_images:
    needs: [check_for_new_stable]
    if: ${{ needs.check_for_new_stable.outputs.dartversion != 'NOTNEW' }}
    env:
      DART_VERSION: ${{ needs.check_for_new_stable.outputs.dartversion }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push buildimage
        id: docker_build1
        uses: docker/build-push-action@v2.7.0
        with:
          file: ./at-buildimage/Dockerfile
          build-args: DART_VERSION=${{ env.DART_VERSION }}
          push: true
          tags: |
            atsigncompany/buildimage:automated
            atsigncompany/buildimage:${{ env.DART_VERSION }}
            atsigncompany/buildimage:GHA_${{ github.run_number }}
          platforms: |
            linux/amd64
            linux/arm64/v8

      - name: Build and push dartshowplatform
        id: docker_build3
        uses: docker/build-push-action@v2.7.0
        with:
          file: ./dartshowplatform/Dockerfile
          push: true
          tags: |
            atsigncompany/dartshowplatform:automated
            atsigncompany/dartshowplatform:${{ env.DART_VERSION }}
            atsigncompany/dartshowplatform:GHA_${{ github.run_number }}
          platforms: |
            linux/amd64
            linux/arm64/v8

      - name: Create x64 labels
        env:
          ARCH: x64
        run: |
          docker pull atsigncompany/buildimage:"$DART_VERSION"
          docker pull atsigncompany/dartshowplatform:"$DART_VERSION"
          docker tag atsigncompany/buildimage:"$DART_VERSION" atsigncompany/buildimage:"$DART_VERSION"-"$ARCH"
          docker tag atsigncompany/dartshowplatform:"$DART_VERSION" atsigncompany/dartshowplatform:"$DART_VERSION"-"$ARCH"
          docker push atsigncompany/buildimage:"$DART_VERSION"-"$ARCH"
          docker push atsigncompany/dartshowplatform:"$DART_VERSION"-"$ARCH"

      - name: Create arm64 labels
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: "arm64cicd.atsign.wtf"
          username: ubuntu
          key: ${{ secrets.CICD_SSH_KEY }}
          script: |
            export ARCH="arm64"
            export DART_VERSION="${{ needs.check_for_new_stable.outputs.dartversion }}"
            sudo docker pull atsigncompany/buildimage:"$DART_VERSION"
            sudo docker pull atsigncompany/dartshowplatform:"$DART_VERSION"
            sudo docker tag atsigncompany/buildimage:"$DART_VERSION" atsigncompany/buildimage:"$DART_VERSION"-"$ARCH"
            sudo docker tag atsigncompany/dartshowplatform:"$DART_VERSION" atsigncompany/dartshowplatform:"$DART_VERSION"-"$ARCH"
            sudo docker push atsigncompany/buildimage:"$DART_VERSION"-"$ARCH"
            sudo docker push atsigncompany/dartshowplatform:"$DART_VERSION"-"$ARCH"

  build_armv7_image:
    needs: [check_for_new_stable]
    if: ${{ needs.check_for_new_stable.outputs.dartversion != 'NOTNEW' }}
    env:
      DART_VERSION: ${{ needs.check_for_new_stable.outputs.dartversion }}
    runs-on: ubuntu-latest
    steps:            
      - name: Create arm images
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: "arm32cicd.atsign.wtf"
          username: pi
          command_timeout: 30m
          key: ${{ secrets.CICD_SSH_KEY }}
          script: |
            export ARCH="arm"
            export DART_VERSION="${{ needs.check_for_new_stable.outputs.dartversion }}"
            cd /home/pi/git/github.com/atsign-company/at_dockerfiles
            git pull
            sudo docker build -t atsigncompany/buildimage:"$DART_VERSION"-"$ARCH" \
              --build-arg DART_VERSION="$DART_VERSION" -f at-buildimage/Dockerfile .
            sudo docker push atsigncompany/buildimage:"$DART_VERSION"-"$ARCH"
            sudo docker tag atsigncompany/buildimage:"$DART_VERSION"-"$ARCH" \
              atsigncompany/buildimage:automated
            sudo docker push atsigncompany/buildimage:automated
            sudo docker build -t atsigncompany/dartshowplatform:"$DART_VERSION"-"$ARCH" \
              --build-arg IMAGE_TAG="$DART_VERSION" -f dartshowplatform/Dockerfile .
            sudo docker push atsigncompany/dartshowplatform:"$DART_VERSION"-"$ARCH"

  tag_multi_arch_images:
    needs: [check_for_new_stable, build_multi_arch_images, build_armv7_image]
    env:
      DART_VERSION: ${{ needs.check_for_new_stable.outputs.dartversion }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push multi-arch manifests
        run: |
          docker manifest create atsigncompany/buildimage:"$DART_VERSION" \
            --amend atsigncompany/buildimage:"$DART_VERSION"-arm \
            --amend atsigncompany/buildimage:"$DART_VERSION"-arm64 \
            --amend atsigncompany/buildimage:"$DART_VERSION"-x64
          docker manifest push atsigncompany/buildimage:"$DART_VERSION"
          docker manifest create atsigncompany/buildimage:latest \
            --amend atsigncompany/buildimage:"$DART_VERSION"-arm \
            --amend atsigncompany/buildimage:"$DART_VERSION"-arm64 \
            --amend atsigncompany/buildimage:"$DART_VERSION"-x64
          docker manifest push atsigncompany/buildimage:latest
          docker manifest create atsigncompany/dartshowplatform:"$DART_VERSION" \
            --amend atsigncompany/dartshowplatform:"$DART_VERSION"-arm \
            --amend atsigncompany/dartshowplatform:"$DART_VERSION"-arm64 \
            --amend atsigncompany/dartshowplatform:"$DART_VERSION"-x64
          docker manifest push atsigncompany/dartshowplatform:"$DART_VERSION"
          docker manifest create atsigncompany/dartshowplatform:latest \
            --amend atsigncompany/dartshowplatform:"$DART_VERSION"-arm \
            --amend atsigncompany/dartshowplatform:"$DART_VERSION"-arm64 \
            --amend atsigncompany/dartshowplatform:"$DART_VERSION"-x64
          docker manifest push atsigncompany/dartshowplatform:latest